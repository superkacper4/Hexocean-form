{"version":3,"sources":["components/MyForm/MyForm.api.js","components/MyForm/MyForm.css.js","components/MyForm/MyForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["sendDish","sendingData","setLoading","setError","setSuccess","a","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","message","StyledH2","styled","h2","StyledMyForm","form","StyledInput","input","StyledOption","option","StyledSelect","Field","StyledSubmit","button","StyledAlert","div","isErr","MyForm","useState","loading","success","required","value","undefined","onSubmit","values","validate","render","handleSubmit","submitting","event","name","meta","type","placeholder","touched","default","step","component","selected","disabled","parse","Number","min","max","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2PAAaA,EAAQ,uCAAG,WAAOC,EAAaC,EAAYC,EAAUC,GAA1C,SAAAC,EAAA,sDACpBH,GAAW,GACXC,GAAS,GACTC,GAAW,GACXE,MAAM,qDAAsD,CACxDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUV,KAEpBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFX,EAAWW,GACXb,GAAW,GACXC,GAAS,MAEZa,OAAM,SAACC,GACJd,EAASc,EAAMC,SACfhB,GAAW,GACXE,GAAW,MApBC,2CAAH,4D,cCGfe,EAAWC,IAAOC,GAAV,4FAMRC,EAAeF,IAAOG,KAAV,qSAeZC,EAAcJ,IAAOK,MAAV,wKASXC,EAAeN,IAAOO,OAAV,uJAQZC,EAAeR,YAAOS,IAAPT,CAAH,sJAQZU,EAAeV,IAAOW,OAAV,iLASZC,EAAcZ,IAAOa,IAAV,qKAEO,qBAAGC,MAAoB,UAAY,a,OCyD5CC,EAhHA,WACX,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBnC,EAAhB,KACA,EAA0BkC,qBAA1B,mBAAOnB,EAAP,KAAcd,EAAd,KACA,EAA8BiC,qBAA9B,mBAAOE,EAAP,KAAgBlC,EAAhB,KAOMmC,EAAW,SAAAC,GAAK,OAAKA,OAAQC,EAAY,cAACT,EAAD,CAAaE,OAAO,EAApB,uBAE/C,OACI,cAAC,IAAD,CACIQ,SATS,SAACC,GACd3C,EAAS2C,EAAQzC,EAAYC,EAAUC,IASnCwC,SAAUL,EACVM,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYJ,EAA7B,EAA6BA,OAA7B,OACJ,eAACrB,EAAD,CAAcoB,SAAQ,uCAAE,WAAMM,GAAN,SAAA3C,EAAA,sEACdyC,EAAaE,GADC,2CAAF,sDAAtB,UAGI,cAAC7B,EAAD,qBAEA,cAAC,IAAD,CAAO8B,KAAK,OAAOL,SAAUL,EAA7B,SACK,gBAAGd,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,OAAOC,YAAY,UAC/CF,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,cAKvD,cAAC,IAAD,CAAOgC,KAAK,mBAAmBL,SAAUL,EAAUe,SAAO,EAA1D,SACK,gBAAG7B,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,OAAOI,KAAK,OACxCL,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,cAKvD,eAACW,EAAD,CAAcqB,KAAK,OAAOO,UAAU,SAASZ,SAAUL,EAAvD,UAEI,cAACb,EAAD,CAAcc,MAAM,GAAGiB,UAAQ,EAACC,UAAQ,EAAxC,oBACA,cAAChC,EAAD,CAAcc,MAAM,QAApB,gCACA,cAACd,EAAD,CAAcc,MAAM,WAApB,mCACA,cAACd,EAAD,CAAcc,MAAM,OAApB,kCAIa,UAAhBG,EAAOQ,KAAmB,qCAEvB,cAAC,IAAD,CAAOF,KAAK,eAAeL,SAAUL,EAAUoB,MAAO,SAAAnB,GAAK,OAAIoB,OAAOpB,IAAtE,SACK,gBAAGf,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,SAASC,YAAY,KAAKS,IAAI,IAAIC,IAAI,QAClEZ,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,cAKvD,cAAC,IAAD,CAAOgC,KAAK,WAAWL,SAAUL,EAAUoB,MAAO,SAAAnB,GAAK,OAAIoB,OAAOpB,IAAlE,SACK,gBAAGf,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,SAASC,YAAY,KAAKS,IAAI,IAAIC,IAAI,SAClEZ,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,iBAKrD,KAEW,SAAhB0B,EAAOQ,KAAkB,mCAEtB,cAAC,IAAD,CAAOF,KAAK,kBAAkBL,SAAUL,EAAUoB,MAAO,SAAAnB,GAAK,OAAIoB,OAAOpB,IAAzE,SACK,gBAAGf,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,SAASC,YAAY,IAAIS,IAAI,IAAIC,IAAI,QACjEZ,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,gBAKrD,KAEW,aAAhB0B,EAAOQ,KAAsB,mCAE1B,cAAC,IAAD,CAAOF,KAAK,kBAAkBL,SAAUL,EAAUoB,MAAO,SAAAnB,GAAK,OAAIoB,OAAOpB,IAAzE,SACK,gBAAGf,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,KAAV,OACG,qCACI,cAAC1B,EAAD,2BAAiBC,GAAjB,IAAwB0B,KAAK,SAASC,YAAY,KAAKS,IAAI,IAAIC,IAAI,QAClEZ,EAAKjC,OAASiC,EAAKG,SAAW,+BAAOH,EAAKjC,gBAKrD,KAEN,cAACa,EAAD,CAAcqB,KAAK,SAASO,SAAUX,EAAtC,oBAGC9B,EAAQ,cAACe,EAAD,CAAaE,OAAO,EAApB,SAA2BjB,IAAuB,KAC1DqB,EAAU,cAACN,EAAD,sBAAqC,KAC/CK,EAAU,cAACL,EAAD,yBAAyC,YC9FzD+B,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0f4193ca.chunk.js","sourcesContent":["export const sendDish = async (sendingData, setLoading, setError, setSuccess) => {\r\n    setLoading(true)\r\n    setError(false)\r\n    setSuccess(false)\r\n    fetch('https://frosty-wood-6558.getsandbox.com:443/dishes', {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(sendingData),\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setSuccess(data)\r\n            setLoading(false)\r\n            setError(false)\r\n        })\r\n        .catch((error) => {\r\n            setError(error.message)\r\n            setLoading(false)\r\n            setSuccess(false)\r\n        });\r\n};","import styled from 'styled-components'\r\nimport { Field } from 'react-final-form'\r\n\r\nconst StyledH2 = styled.h2`\r\n    padding: 0 0 20px 0;\r\n    margin: 0;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst StyledMyForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #a0a0de;\r\n    border: 2px solid black;\r\n    width: 80vw;\r\n    padding: 20px;\r\n\r\n    @media (min-width: 1024px){\r\n    width: 15vw;\r\n    }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    width: 80%;\r\n    /* height:15px; */\r\n    font-size: 13px;\r\n    background-color: white;\r\n    border:1px solid black;\r\n    margin: 5px;\r\n`;\r\n\r\nconst StyledOption = styled.option`\r\n    width: 100%;\r\n    /* height:15px; */\r\n    font-size: 13px;\r\n    background-color: white;\r\n    border:1px solid black;\r\n`;\r\n\r\nconst StyledSelect = styled(Field)`\r\n    width: 80%;\r\n    /* height:15px; */\r\n    font-size: 13px;\r\n    background-color: white;\r\n    border:1px solid black;\r\n`;\r\n\r\nconst StyledSubmit = styled.button`\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    background-color: white;\r\n    border:1px solid black;\r\n    padding: 10px;\r\n    margin: 20px 0 0 0;\r\n`;\r\n\r\nconst StyledAlert = styled.div`\r\n    width: 80%;\r\n    background-color: ${({ isErr }) => isErr ? '#e39e9a' : '#b6de95'} ;\r\n    border: 1px solid #f06a62;\r\n    margin: 10px;\r\n    padding: 5px;\r\n    color: #6e1e19;\r\n`;\r\n\r\n\r\nexport { StyledMyForm, StyledInput, StyledH2, StyledOption, StyledSelect, StyledSubmit, StyledAlert }","import React, { useState } from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { sendDish } from './MyForm.api'\r\nimport { StyledMyForm, StyledInput, StyledH2, StyledOption, StyledSelect, StyledSubmit, StyledAlert } from './MyForm.css'\r\n\r\nconst MyForm = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n    const [success, setSuccess] = useState()\r\n\r\n    const onSubmit = (values) => {\r\n        sendDish(values, setLoading, setError, setSuccess)\r\n    }\r\n\r\n\r\n    const required = value => (value ? undefined : <StyledAlert isErr={true}>Required</StyledAlert>)\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={required}\r\n            render={({ handleSubmit, submitting, values }) => (\r\n                <StyledMyForm onSubmit={async event => {\r\n                    await handleSubmit(event)\r\n                }}>\r\n                    <StyledH2>MyForm</StyledH2>\r\n\r\n                    <Field name=\"name\" validate={required}>\r\n                        {({ input, meta }) => (\r\n                            <>\r\n                                <StyledInput {...input} type=\"text\" placeholder=\"Name\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <Field name=\"preparation_time\" validate={required} default>\r\n                        {({ input, meta }) => (\r\n                            <>\r\n                                <StyledInput {...input} type=\"time\" step=\"1\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <StyledSelect name=\"type\" component=\"select\" validate={required}>\r\n\r\n                        <StyledOption value=\"\" selected disabled>------</StyledOption>\r\n                        <StyledOption value=\"pizza\">üçï Pizza</StyledOption>\r\n                        <StyledOption value=\"sandwich\">ü•™ Sandwich</StyledOption>\r\n                        <StyledOption value=\"soup\">ü•£ Soup</StyledOption>\r\n\r\n                    </StyledSelect>\r\n\r\n                    {values.type === \"pizza\" ? <>\r\n\r\n                        <Field name=\"no_of_slices\" validate={required} parse={value => Number(value)}>\r\n                            {({ input, meta }) => (\r\n                                <>\r\n                                    <StyledInput {...input} type=\"number\" placeholder=\"10\" min=\"0\" max=\"20\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n\r\n                        <Field name=\"diameter\" validate={required} parse={value => Number(value)}>\r\n                            {({ input, meta }) => (\r\n                                <>\r\n                                    <StyledInput {...input} type=\"number\" placeholder=\"60\" min=\"0\" max=\"400\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n\r\n                    </> : null}\r\n\r\n                    {values.type === \"soup\" ? <>\r\n\r\n                        <Field name=\"spiciness_scale\" validate={required} parse={value => Number(value)}>\r\n                            {({ input, meta }) => (\r\n                                <>\r\n                                    <StyledInput {...input} type=\"number\" placeholder=\"5\" min=\"0\" max=\"10\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n\r\n                    </> : null}\r\n\r\n                    {values.type === \"sandwich\" ? <>\r\n\r\n                        <Field name=\"slices_of_bread\" validate={required} parse={value => Number(value)}>\r\n                            {({ input, meta }) => (\r\n                                <>\r\n                                    <StyledInput {...input} type=\"number\" placeholder=\"10\" min=\"1\" max=\"20\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n\r\n                    </> : null}\r\n\r\n                    <StyledSubmit type=\"submit\" disabled={submitting}>\r\n                        Submit\r\n                    </StyledSubmit>\r\n                    {error ? <StyledAlert isErr={true}>{error}</StyledAlert> : null}\r\n                    {success ? <StyledAlert>Success</StyledAlert> : null}\r\n                    {loading ? <StyledAlert >Loading...</StyledAlert> : null}\r\n\r\n                </StyledMyForm>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyForm","import React from 'react'\nimport './App.css';\n\nimport MyForm from './components/MyForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}